rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Evaluations belong to users
    match /evaluations/{evaluationId} {
      allow read, write: if request.auth != null && 
        (resource.data.userId == request.auth.uid || 
         request.data.userId == request.auth.uid);
    }
    
    // Evaluation responses belong to the evaluation owner
    match /evaluations/{evaluationId}/responses/{responseId} {
      allow read, write: if request.auth != null && 
        get(/databases/$(database)/documents/evaluations/$(evaluationId)).data.userId == request.auth.uid;
    }
    
    // Public read access to questions (for now, in development)
    match /questions/{document=**} {
      allow read: if request.auth != null;
    }
    
    // Reports belong to users  
    match /reports/{reportId} {
      allow read, write: if request.auth != null && 
        (resource.data.userId == request.auth.uid || 
         request.data.userId == request.auth.uid);
    }
    
    // Processes belong to tenants/organizations
    match /processes/{processId} {
      allow read, write: if request.auth != null && 
        (resource.data.tenantId == request.auth.token.tenantId || 
         request.data.tenantId == request.auth.token.tenantId);
    }
    
    // Invitations are readable by the process owner and the invited participant
    match /invitations/{invitationId} {
      allow read: if request.auth != null && 
        (resource.data.processOwnerId == request.auth.uid || 
         resource.data.toEmail == request.auth.token.email);
      allow write: if request.auth != null && 
        resource.data.processOwnerId == request.auth.uid;
    }
    
    // Mail events are readable by the process owner
    match /mailEvents/{eventId} {
      allow read: if request.auth != null && 
        resource.data.processOwnerId == request.auth.uid;
      allow write: if request.auth != null; // Only Cloud Functions can write
    }
  }
}
